/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import arquitectura.Entorno;
import com.googlecode.jpingy.PingArguments;
import java.awt.Component;
import java.awt.Dialog.ModalityType;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.net.ConnectException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.MalformedURLException;
import java.net.Socket;
import java.net.URL;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import tools.EntornoTools;
import static tools.EntornoTools.descubrirEntorno;
import static tools.EntornoTools.endpoint;
import tools.HttpTools;
import tools.JsonManager;

/**
 *
 * @author alvaroluismartinez
 */
public class OnosFrame extends javax.swing.JFrame {

    /**
     * Creates new form OnosFrame
     */
    public OnosFrame() {
        initComponents();
        // Set window centered
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OnosFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(OnosFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(OnosFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(OnosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Deafult credentials
//        jTextFieldUsuarioOnos.setText("onos");
//        jTextFieldPasswordOnos.setText("rocks");
//        jTextFieldControlador.setText("localhost");
//        jTextFieldApiHost.setText("localhost");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jButtonConectar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabelImagen = new javax.swing.JLabel();
        jTextFieldApiHost = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabelOSRA = new javax.swing.JLabel();
        jLabelUsuario1 = new javax.swing.JLabel();
        jTextFieldUsuarioOSRA = new javax.swing.JTextField();
        jTextFieldPasswordOSRA = new javax.swing.JPasswordField();
        jLabelPassword1 = new javax.swing.JLabel();
        jButtonRegistrar = new javax.swing.JButton();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ONOS QoS - login");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(65, 76, 85));

        jButtonConectar.setBackground(new java.awt.Color(37, 44, 51));
        jButtonConectar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonConectar.setText("Conectar");
        jButtonConectar.setBorderPainted(false);
        jButtonConectar.setOpaque(true);
        jButtonConectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConectarMouseClicked(evt);
            }
        });

        jLabelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/Untitled-1.png"))); // NOI18N

        jTextFieldApiHost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldKeyPressed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("API host");

        jLabelOSRA.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabelOSRA.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOSRA.setText("Login");

        jLabelUsuario1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelUsuario1.setText("Usuario");

        jTextFieldUsuarioOSRA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldUsuarioOSRAjTextFieldKeyPressed(evt);
            }
        });

        jTextFieldPasswordOSRA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPasswordOSRAjTextFieldKeyPressed(evt);
            }
        });

        jLabelPassword1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPassword1.setText("Contrase√±a");

        jButtonRegistrar.setBackground(new java.awt.Color(37, 44, 51));
        jButtonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.setBorderPainted(false);
        jButtonRegistrar.setOpaque(true);
        jButtonRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRegistrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabelImagen)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelUsuario1)
                                    .addComponent(jLabelPassword1)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldApiHost, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                    .addComponent(jTextFieldPasswordOSRA)
                                    .addComponent(jTextFieldUsuarioOSRA, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(jLabelOSRA)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelImagen)
                .addGap(0, 40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelOSRA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldUsuarioOSRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsuario1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword1)
                    .addComponent(jTextFieldPasswordOSRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldApiHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConectar)
                    .addComponent(jButtonRegistrar))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonConectar.doClick();
            conectar();
        }
    }//GEN-LAST:event_jTextFieldKeyPressed

    private void jButtonConectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConectarMouseClicked
        // TODO add your handling code here:
        //DESCUBRIR ENTORNO
        conectar();
    }//GEN-LAST:event_jButtonConectarMouseClicked

    private void jTextFieldUsuarioOSRAjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioOSRAjTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsuarioOSRAjTextFieldKeyPressed

    private void jTextFieldPasswordOSRAjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPasswordOSRAjTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPasswordOSRAjTextFieldKeyPressed

    private void jButtonRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegistrarMouseClicked
        Registro reg = new Registro();
        reg.setVisible(true);
        reg.pack();
    }//GEN-LAST:event_jButtonRegistrarMouseClicked

    private boolean ping(String ip) throws IOException {
        try {
            boolean ret = false;
            Socket t = new Socket();
            t.connect(new InetSocketAddress(ip, 8181), 2000);
            DataInputStream dis = new DataInputStream(t.getInputStream());
            PrintStream ps = new PrintStream(t.getOutputStream());
            ps.println("Hello");
            String str = dis.readLine();
            if (str.equals("Hello")) {
                System.out.println("Alive!");
            } else {
                System.out.println("Dead or echo port not responding");
            }
            ret = true;
            t.close();
            return ret;
        } catch (IOException ex) {
            Logger.getLogger(OnosFrame.class.getName()).log(Level.SEVERE, null, ex);
            throw new IOException("Socket error");
        }

    }

    private void conectar() {
//        Conectando conectando = new Conectando(this, true);
//        conectando.setVisible(true);
//        conectando.pack();

        
        Properties prop = new Properties();
        InputStream is = null;
        String user = null;
        String password = null;
        String onosHost = null;
//        String user = String.valueOf(jTextFieldUsuarioOnos.getText());
//        String password = String.valueOf(jTextFieldPasswordOnos.getPassword());
//        String onosHost = String.valueOf(jTextFieldControlador.getText());
        
        try {
            is = new FileInputStream("onosConfig.properties");
            prop.load(is);
            user = prop.getProperty("onos.user");
            password = prop.getProperty("onos.password");
            onosHost = prop.getProperty("onos.host");
        } catch(IOException e) {
            System.out.println(e.toString());
        }
        finally{
            if(is!=null)
                try {
                    is.close();
            } catch (IOException ex) {
                Logger.getLogger(OnosFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        EntornoTools.user = String.valueOf(jTextFieldUsuarioOSRA.getText());
        EntornoTools.password = new String(jTextFieldPasswordOSRA.getPassword());     
        EntornoTools.apiHost = String.valueOf(jTextFieldApiHost.getText());
        EntornoTools.endpoint = "http://" + EntornoTools.apiHost + ":8080/onosapp-v1";
        EntornoTools.endpointAuth = endpoint + "/rest/authorization";
        String sufix = "";
        if(EntornoTools.isAdmin())
           sufix = "administration";
        else
            sufix = "users";
        EntornoTools.endpointEnvironment = endpoint + "/"+sufix+"/environment";
        EntornoTools.endpointFlows = endpoint + "/"+sufix+"/flows";
        EntornoTools.endpointVpls = endpoint + "/"+sufix+"/vpls";
        EntornoTools.endpointMeters = endpoint + "/"+sufix+"/meters";
        EntornoTools.endpointSwitches = endpoint + "/"+sufix+"/switches";

        String json = "{\n"
                + "	\"userOnos\":\"" + user + "\",\n"
                + "	\"passwordOnos\":\"" + password + "\",\n"
                + "	\"onosHost\": \"" + onosHost + "\"\n"
                + "}";
        //JOptionPane.showMessageDialog(this, "Conectando con el controlador...", "Conectando...", JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog = mostrarDialogo();
        try {

            int response = HttpTools.doJSONPost(new URL((EntornoTools.endpointAuth)), json);
            if (response == 200) {
                EntornoTools.descubrirEntorno();
                //            conectando.dispose();
                //            conectando.doAceptar();
                dialog.setVisible(false);
                JFrame principal = new Principal();
                principal.setVisible(true);
                principal.pack();
                this.dispose();
            } else {
                dialog.setVisible(false);
                JOptionPane.showMessageDialog(this, "ERROR. No se ha podido establecer conexi√≥n", "Error de conexi√≥n", JOptionPane.ERROR_MESSAGE);
            }
            // Check connetivity
            /*if(ping(EntornoTools.onosHost)){
                EntornoTools.descubrirEntorno();
    //            conectando.dispose();
    //            conectando.doAceptar();
                dialog.setVisible(false);
                JFrame principal = new Principal();
                principal.setVisible(true);
                principal.pack();
                this.dispose();
            }
            else{
                dialog.setVisible(false);
                System.err.println("No conexion con controlador");
                JOptionPane.showMessageDialog(this, "ERROR. No se ha podido establecer conexi√≥n con el controlador", "Error de conexi√≥n", JOptionPane.ERROR_MESSAGE);
            
            }*/

        } catch (IOException e1) {
            //COMPLETAR VENTANA DE AVISO
//            conectando.dispose();
            dialog.setVisible(false);
            System.err.println(e1.getMessage());
            JOptionPane.showMessageDialog(this, "ERROR. No se ha podido establecer conexi√≥n", "Error de conexi√≥n", JOptionPane.ERROR_MESSAGE);
            /*JDialog errorOnos = new NewOkCancelDialog(this, true, "ERROR. No se ha podido establecer conexi√≥n con el controlador");
            errorOnos.setVisible(true);
            errorOnos.pack();*/
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OnosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OnosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OnosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OnosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OnosFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConectar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JLabel jLabelOSRA;
    private javax.swing.JLabel jLabelPassword1;
    private javax.swing.JLabel jLabelUsuario1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldApiHost;
    private javax.swing.JPasswordField jTextFieldPasswordOSRA;
    private javax.swing.JTextField jTextFieldUsuarioOSRA;
    // End of variables declaration//GEN-END:variables

    private JDialog mostrarDialogo() {
        JOptionPane pane = new JOptionPane("Conectando con el controlador...", JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog;
        dialog = pane.createDialog(null, "Conectando al controlador...");
        dialog.setModal(false);
        dialog.setVisible(true);
        dialog.pack();
        return dialog;
    }

}
